% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample-geometric.R
\name{sample-geometric}
\alias{sample-geometric}
\alias{make_geometric}
\alias{sample_unit}
\alias{sample_geometric}
\title{Sample random geometric simplicial complexes}
\usage{
make_geometric(
  d,
  radius = NULL,
  dimension = 1L,
  method = c("vietoris_rips"),
  coords = FALSE,
  ...
)

sample_unit(n, torus = FALSE, coords = FALSE)

sample_geometric(
  n,
  torus = FALSE,
  radius = NULL,
  dimension = 1L,
  method = c("vietoris_rips"),
  coords = FALSE,
  ...
)
}
\arguments{
\item{d}{a distance matrix (`"dist"` class) object, or a numeric matrix of
(row) coordinates of points (which will be transformed into a distance
matrix).}

\item{radius}{a numeric distance within which subsets of points will form
simplices.}

\item{dimension}{an integer maximum dimension of simplices to form.}

\item{method}{a character string indicating the model to use; matched only to
`"vietoris_rips"`, allowing for spaces in place of underscores,
anticipating future additional methods like `"cech"`.}

\item{coords}{a logical instruction to retain the coordinates from a numeric
matrix `d` as an attribute of the simplicial complex.}

\item{...}{additional parameters passed to \code{\link{rips}()}.}

\item{n}{an integer number of starting points.}

\item{torus}{a logical instruction to identify opposite faces of the sampling
region.}
}
\description{
Generate Vietorisâ€“Rips complexes on random point clouds.
}
\details{
(Add details.)
}
\examples{
set.seed(1)
## Construct geometric simplicial complexes from a sample point cloud
theta <- stats::runif(n = 24L, min = 0, max = 2*pi)
x <- cbind(x = cos(theta), y = sin(theta))
plot(x)
make_geometric(x, radius = .03, dimension = 2L)
make_geometric(x, radius = .3, dimension = 2L)
## Check distance ranges for square and toroidal samples
sqrt(2)
range(sample_unit(n = 1e3L))
sqrt(2)/2
range(sample_unit(n = 1e3L, torus = TRUE))
## Construct random geometric simplicial complexes, square and toroidal
plot(sample_geometric(24L, radius = .1, dimension = 1L))
plot(sample_geometric(24L, radius = .1, dimension = 1L, torus = TRUE))
plot(sample_geometric(24L, radius = .1, dimension = 2L))
plot(sample_geometric(24L, radius = .1, dimension = 2L, torus = TRUE))
}
