% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simplex_tree.R
\name{traverse}
\alias{traverse}
\title{traverse}
\usage{
traverse(traversal, f, ...)
}
\arguments{
\item{f}{An arbitrary function which accepts as input a simplex. See details.}

\item{sigma}{The simplex to initialize the traversal. See details.}

\item{type}{One of "dfs", "bfs", "cofaces", "star", "link", "skeleton", or "maximal-skeleton".}
}
\value{
NULL; for list or vector-valued returns, use \code{ltraverse} and \code{straverse} respectively.
}
\description{
Traverses subsets of a simplicial complex.
}
\details{
\code{\link{traverse}} allows for traversing ordered subsets of the simplex tree. 
The simplices within each subset are determined by two aspects: the initial simplex \code{sigma} 
and the traversal \code{type}. Given an initial simplex \code{sigma}, \code{traverse} generates 
an ordered set of simplices based on the traversal \code{type}, which are iteratively passed to 
the supplied function \code{f} as the first argument to \code{f}. \cr
\cr
\code{sigma} can either be omitted, a simplex, or the \code{empty_face} (which is an alias to NULL).
}
\examples{
## Starter example complex 
st <- simplex_tree()
st \%>\% insert(list(1:3, 2:5))

## Print out complex using depth-first traversal. 
st \%>\% traverse(preorder(st), print)
}
\seealso{
Other traversals: 
\code{\link{ltraverse}()},
\code{\link{straverse}()}
}
\concept{traversals}
