% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simplex_tree.R
\docType{class}
\name{simplex_tree}
\alias{simplex_tree}
\alias{simplextree}
\alias{SimplexTree}
\title{Simplex Tree}
\usage{
simplex_tree()
}
\value{
A queryable simplex tree, as a \code{Rcpp_SimplexTree} object (Rcpp module).
}
\description{
Simplex tree class exposed as an Rcpp Module.
}
\details{
A simplex tree is an ordered trie-like structure specialized for storing and doing general computation 
simplicial complexes. Here is figure of a simplex tree, taken from the original paper (see 1): \cr  
\if{html}{\figure{simplextree.png}{options: width="80\%" alt="Figure: simplextree.png"}}
\if{latex}{\figure{simplextree.pdf}{options: width=12cm}}
\cr 
The current implementation provides a limited API and a subset of the functionality described in the paper.
}
\section{Fields}{

\describe{
\item{\code{n_simplexes}}{A vector, where each index k denotes the number (k-1)-simplices.}

\item{\code{max_depth}}{The maximum height of the tree. The root of the tree has height 0, vertices have height 1, etc.}
}}

\section{Methods}{
 
\describe{
    \item{$\code{print_tree}}{ Prints the simplex tree. }
    \item{$\code{\link[simplextree:apply.simplex_tree]{apply}}()}{ Applies a function to a subset of the simplex tree. }
    \item{$\code{\link{insert_simplex}}}{ Inserts a simplex into the trie, if it doesn't exist. }
    \item{$\code{\link{remove_simplex}}}{ Removes a simplex from the trie, if it exists. }
    \item{$\code{\link{find_simplex}}}{ Searches the trie for a simplex. }
    \item{$\code{\link{collapse}}}{ Performs an elementary collapse. }
    \item{$\code{\link{contract}}}{ Performs an edge contraction. }
    \item{$\code{\link{is_face}}}{ Checks for faces. }
    \item{$\code{\link{serialize}}}{ Serializes the simplex tree. }
    \item{$\code{\link{unserialize}}}{ Unserializes a stored simplex tree. }
    \item{$\code{as_list}}{ Converts the complex to a list. }
    \item{$\code{as_adjacency_matrix}}{ Converts the 1-skeleton to an adjacency matrix. }
    \item{$\code{as_adjacency_list}}{ Converts the 1-skeleton to an adjacenecy list. }
    \item{$\code{as_edgelist}}{ Converts the 1-skeleton to an edgelist. }
}
}

\examples{
## Recreating simplex tree from figure. 
stree <- simplex_tree()
stree$insert_simplex(c(1, 2, 3))
stree$insert_simplex(c(2, 3, 4, 5))
stree$insert_simplex(c(5, 6, 9))
stree$insert_simplex(c(7, 8))
stree$insert_simplex(10)
}
\references{
1. Boissonnat, Jean-Daniel, and Clement Maria. "The simplex tree: An efficient data structure for general simplicial complexes." Algorithmica 70.3 (2014): 406-427.
}
\author{
Matt Piekenbrock
}
